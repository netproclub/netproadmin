{"version":3,"file":"Listado-Czk6Y7xK.js","sources":["../../src/hooks/useFilter.js","../../src/hooks/usePagination.js","../../src/components/Pagination.jsx","../../src/components/Listado.jsx"],"sourcesContent":["import { useState, useMemo } from 'react'\n\nexport const useFilter = (data, filterConfig = {}) => {\n  const [filters, setFilters] = useState({})\n\n  const filteredData = useMemo(() => {\n    if (Object.keys(filters).length === 0) {\n      return data\n    }\n\n    return data.filter(item => {\n      return Object.entries(filters).every(([field, filterValue]) => {\n        if (!filterValue || filterValue.trim() === '') {\n          return true\n        }\n\n        const itemValue = item[field]\n        if (itemValue == null) {\n          return false\n        }\n\n        const itemString = itemValue.toString().toLowerCase()\n        const filterString = filterValue.toString().toLowerCase()\n\n        const config = filterConfig[field] || {}\n\n        switch (config.type) {\n          case 'exact':\n            return itemString === filterString\n          case 'number':\n            return parseFloat(itemValue) === parseFloat(filterValue)\n          case 'contains':\n          default:\n            return itemString.includes(filterString)\n        }\n      })\n    })\n  }, [data, filters, filterConfig])\n\n  const setFilter = (field, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [field]: value\n    }))\n  }\n\n  const clearFilter = (field) => {\n    setFilters(prev => {\n      const newFilters = { ...prev }\n      delete newFilters[field]\n      return newFilters\n    })\n  }\n\n  const clearAllFilters = () => {\n    setFilters({})\n  }\n\n  const hasActiveFilters = Object.keys(filters).some(key =>\n    filters[key] && filters[key].toString().trim() !== ''\n  )\n\n  return {\n    filteredData,\n    filters,\n    setFilter,\n    clearFilter,\n    clearAllFilters,\n    hasActiveFilters\n  }\n}","import { useState, useMemo } from 'react'\n\nexport const usePagination = (data, itemsPerPage = 10) => {\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const totalItems = data.length\n  const totalPages = Math.ceil(totalItems / itemsPerPage)\n\n  const paginatedData = useMemo(() => {\n    const startIndex = (currentPage - 1) * itemsPerPage\n    const endIndex = startIndex + itemsPerPage\n    return data.slice(startIndex, endIndex)\n  }, [data, currentPage, itemsPerPage])\n\n  const goToPage = (page) => {\n    const targetPage = Math.max(1, Math.min(page, totalPages))\n    setCurrentPage(targetPage)\n  }\n\n  const goToNextPage = () => {\n    goToPage(currentPage + 1)\n  }\n\n  const goToPrevPage = () => {\n    goToPage(currentPage - 1)\n  }\n\n  const goToFirstPage = () => {\n    goToPage(1)\n  }\n\n  const goToLastPage = () => {\n    goToPage(totalPages)\n  }\n\n  const reset = () => {\n    setCurrentPage(1)\n  }\n\n  return {\n    currentPage,\n    totalPages,\n    totalItems,\n    paginatedData,\n    hasNextPage: currentPage < totalPages,\n    hasPrevPage: currentPage > 1,\n    goToPage,\n    goToNextPage,\n    goToPrevPage,\n    goToFirstPage,\n    goToLastPage,\n    reset\n  }\n}","import { memo } from 'react'\n\nconst Pagination = memo(({\n  currentPage,\n  totalPages,\n  totalItems,\n  itemsPerPage,\n  onPageChange,\n  hasNextPage,\n  hasPrevPage,\n  onNextPage,\n  onPrevPage,\n  onFirstPage,\n  onLastPage\n}) => {\n  if (totalPages <= 1) return null\n\n  const startItem = (currentPage - 1) * itemsPerPage + 1\n  const endItem = Math.min(currentPage * itemsPerPage, totalItems)\n\n  const renderPageNumbers = () => {\n    const pages = []\n    const maxVisiblePages = 5\n\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2))\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1)\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1)\n    }\n\n    if (startPage > 1) {\n      pages.push(\n        <button\n          key={1}\n          onClick={() => onPageChange(1)}\n          className=\"pagination-button\"\n          aria-label=\"Ir a la página 1\"\n        >\n          1\n        </button>\n      )\n      if (startPage > 2) {\n        pages.push(\n          <span key=\"ellipsis-start\" className=\"pagination-ellipsis\">\n            ...\n          </span>\n        )\n      }\n    }\n\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(\n        <button\n          key={i}\n          onClick={() => onPageChange(i)}\n          className={`pagination-button ${i === currentPage ? 'active' : ''}`}\n          aria-label={`Ir a la página ${i}`}\n          aria-current={i === currentPage ? 'page' : undefined}\n        >\n          {i}\n        </button>\n      )\n    }\n\n    if (endPage < totalPages) {\n      if (endPage < totalPages - 1) {\n        pages.push(\n          <span key=\"ellipsis-end\" className=\"pagination-ellipsis\">\n            ...\n          </span>\n        )\n      }\n      pages.push(\n        <button\n          key={totalPages}\n          onClick={() => onPageChange(totalPages)}\n          className=\"pagination-button\"\n          aria-label={`Ir a la página ${totalPages}`}\n        >\n          {totalPages}\n        </button>\n      )\n    }\n\n    return pages\n  }\n\n  return (\n    <div className=\"pagination-container\" role=\"navigation\" aria-label=\"Paginación\">\n      <div className=\"pagination-info\">\n        Mostrando {startItem} - {endItem} de {totalItems} resultados\n      </div>\n\n      <div className=\"pagination-controls\">\n        <button\n          onClick={onFirstPage}\n          disabled={!hasPrevPage}\n          className=\"pagination-button\"\n          aria-label=\"Ir a la primera página\"\n        >\n          ⏮️ Primera\n        </button>\n\n        <button\n          onClick={onPrevPage}\n          disabled={!hasPrevPage}\n          className=\"pagination-button\"\n          aria-label=\"Ir a la página anterior\"\n        >\n          ⬅️ Anterior\n        </button>\n\n        {renderPageNumbers()}\n\n        <button\n          onClick={onNextPage}\n          disabled={!hasNextPage}\n          className=\"pagination-button\"\n          aria-label=\"Ir a la página siguiente\"\n        >\n          Siguiente ➡️\n        </button>\n\n        <button\n          onClick={onLastPage}\n          disabled={!hasNextPage}\n          className=\"pagination-button\"\n          aria-label=\"Ir a la última página\"\n        >\n          Última ⏭️\n        </button>\n      </div>\n    </div>\n  )\n})\n\nPagination.displayName = 'Pagination'\n\nexport default Pagination","import { useState, useEffect, useCallback, memo } from 'react'\nimport { useFilter } from '../hooks/useFilter'\nimport { usePagination } from '../hooks/usePagination'\nimport apiService from '../services/apiService'\nimport LoadingSpinner from './LoadingSpinner'\nimport Pagination from './Pagination'\nimport { logger } from '../utils/logger'\nimport '../styles/Listado.css'\n\nconst FILTER_CONFIG = {\n  id: { type: 'exact' },\n  telefono: { type: 'contains' },\n  email: { type: 'contains' }\n}\n\nconst ITEMS_PER_PAGE = 10\n\nconst TableCell = memo(({ children, className = '', title }) => (\n  <td className={`table-cell ${className}`} title={title}>\n    {children}\n  </td>\n))\n\nTableCell.displayName = 'TableCell'\n\nconst FilterInput = memo(({ field, label, value, onChange, placeholder }) => (\n  <div className=\"filter-group\">\n    <label htmlFor={`filter-${field}`} className=\"filter-label\">\n      {label}\n    </label>\n    <input\n      id={`filter-${field}`}\n      type=\"text\"\n      value={value || ''}\n      onChange={(e) => onChange(field, e.target.value)}\n      placeholder={placeholder}\n      className=\"filter-input\"\n    />\n  </div>\n))\n\nFilterInput.displayName = 'FilterInput'\n\nconst Listado = () => {\n  const [users, setUsers] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n\n  const { filteredData, filters, setFilter, clearAllFilters, hasActiveFilters } = useFilter(users, FILTER_CONFIG)\n\n  const {\n    currentPage,\n    totalPages,\n    totalItems,\n    paginatedData,\n    hasNextPage,\n    hasPrevPage,\n    goToPage,\n    goToNextPage,\n    goToPrevPage,\n    goToFirstPage,\n    goToLastPage,\n    reset: resetPagination\n  } = usePagination(filteredData, ITEMS_PER_PAGE)\n\n  const loadUsers = useCallback(async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      logger.info('Loading users...')\n\n      const response = await apiService.getUsers()\n      setUsers(response.data || [])\n\n      logger.info(`Loaded ${response.data?.length || 0} users`)\n    } catch (err) {\n      logger.error('Failed to load users', err)\n      setError(err.message || 'Error al cargar los usuarios')\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    loadUsers()\n  }, [])\n\n  useEffect(() => {\n    resetPagination()\n  }, [filteredData.length, resetPagination])\n\n  const handleFilterChange = useCallback((field, value) => {\n    setFilter(field, value)\n  }, [setFilter])\n\n  const handleClearFilters = useCallback(() => {\n    clearAllFilters()\n  }, [clearAllFilters])\n\n  const renderFilters = () => (\n    <section className=\"filters-section\" aria-label=\"Filtros de búsqueda\">\n      <div className=\"filters-header\">\n        <h3 className=\"filters-title\">Filtros de Búsqueda</h3>\n        {hasActiveFilters && (\n          <button\n            onClick={handleClearFilters}\n            className=\"clear-filters-button\"\n            type=\"button\"\n            aria-label=\"Limpiar todos los filtros\"\n          >\n            Limpiar Filtros\n          </button>\n        )}\n      </div>\n\n      <div className=\"filters-grid\">\n        <FilterInput\n          field=\"id\"\n          label=\"ID\"\n          value={filters.id}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por ID...\"\n        />\n        <FilterInput\n          field=\"usuario\"\n          label=\"Usuario\"\n          value={filters.usuario}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por usuario...\"\n        />\n        <FilterInput\n          field=\"nombre\"\n          label=\"Nombre\"\n          value={filters.nombre}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por nombre...\"\n        />\n        <FilterInput\n          field=\"apellido\"\n          label=\"Apellido\"\n          value={filters.apellido}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por apellido...\"\n        />\n        <FilterInput\n          field=\"email\"\n          label=\"Email\"\n          value={filters.email}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por email...\"\n        />\n        <FilterInput\n          field=\"ciudad\"\n          label=\"Ciudad\"\n          value={filters.ciudad}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por ciudad...\"\n        />\n        <FilterInput\n          field=\"especialidad\"\n          label=\"Especialidad\"\n          value={filters.especialidad}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por especialidad...\"\n        />\n        <FilterInput\n          field=\"telefono\"\n          label=\"Teléfono\"\n          value={filters.telefono}\n          onChange={handleFilterChange}\n          placeholder=\"Buscar por teléfono...\"\n        />\n      </div>\n    </section>\n  )\n\n  const renderTable = () => (\n    <div className=\"table-container\">\n      <div className=\"table-wrapper\">\n        <table className=\"data-table\" role=\"table\">\n          <thead className=\"table-header\">\n            <tr>\n              <th className=\"table-header-cell\" scope=\"col\">ID</th>\n              <th className=\"table-header-cell\" scope=\"col\">Usuario</th>\n              <th className=\"table-header-cell\" scope=\"col\">Nombre</th>\n              <th className=\"table-header-cell\" scope=\"col\">Apellido</th>\n              <th className=\"table-header-cell\" scope=\"col\">Email</th>\n              <th className=\"table-header-cell\" scope=\"col\">Teléfono</th>\n              <th className=\"table-header-cell\" scope=\"col\">Ciudad</th>\n              <th className=\"table-header-cell\" scope=\"col\">Dirección</th>\n              <th className=\"table-header-cell\" scope=\"col\">Especialidad</th>\n              <th className=\"table-header-cell\" scope=\"col\">Instagram</th>\n              <th className=\"table-header-cell\" scope=\"col\">Facebook</th>\n              <th className=\"table-header-cell\" scope=\"col\">X (Twitter)</th>\n            </tr>\n          </thead>\n          <tbody>\n            {paginatedData.map((user) => (\n              <tr key={user.id} className=\"table-row\">\n                <TableCell>{user.id}</TableCell>\n                <TableCell title={user.usuario}>{user.usuario}</TableCell>\n                <TableCell title={user.nombre}>{user.nombre}</TableCell>\n                <TableCell title={user.apellido}>{user.apellido}</TableCell>\n                <TableCell title={user.email}>{user.email}</TableCell>\n                <TableCell title={user.telefono}>{user.telefono}</TableCell>\n                <TableCell title={user.ciudad}>{user.ciudad}</TableCell>\n                <TableCell title={user.direccion}>{user.direccion}</TableCell>\n                <TableCell title={user.especialidad}>{user.especialidad}</TableCell>\n                <TableCell title={user.instagram}>{user.instagram}</TableCell>\n                <TableCell title={user.facebook}>{user.facebook}</TableCell>\n                <TableCell title={user.x}>{user.x}</TableCell>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {totalPages > 1 && (\n        <Pagination\n          currentPage={currentPage}\n          totalPages={totalPages}\n          totalItems={totalItems}\n          itemsPerPage={ITEMS_PER_PAGE}\n          onPageChange={goToPage}\n          hasNextPage={hasNextPage}\n          hasPrevPage={hasPrevPage}\n          onNextPage={goToNextPage}\n          onPrevPage={goToPrevPage}\n          onFirstPage={goToFirstPage}\n          onLastPage={goToLastPage}\n        />\n      )}\n    </div>\n  )\n\n  const renderEmptyState = () => (\n    <div className=\"empty-state\">\n      <div className=\"empty-icon\" aria-hidden=\"true\">📋</div>\n      <h3 className=\"empty-title\">No hay usuarios</h3>\n      <p className=\"empty-description\">\n        {hasActiveFilters\n          ? 'No se encontraron usuarios que coincidan con los filtros aplicados.'\n          : 'No hay usuarios registrados en el sistema.'}\n      </p>\n    </div>\n  )\n\n  const renderError = () => {\n    const isCorsError = error && error.includes('CORS')\n\n    return (\n      <div className=\"error-alert\" role=\"alert\">\n        <span aria-hidden=\"true\">⚠️</span>\n        <div>\n          <strong>{isCorsError ? 'Error de Configuración CORS' : 'Error de Conexión'}</strong>\n          <p>{error}</p>\n          {isCorsError && (\n            <div style={{ marginTop: '1rem', padding: '1rem', backgroundColor: '#fff3cd', borderRadius: '4px' }}>\n              <h4>Solución para el administrador del API:</h4>\n              <p>Agregar a la configuración CORS del servidor:</p>\n              <code style={{ backgroundColor: '#f8f9fa', padding: '0.5rem', borderRadius: '2px' }}>\n                Access-Control-Allow-Origin: https://netproadmin.store\n              </code>\n            </div>\n          )}\n        </div>\n        {!isCorsError && (\n          <button\n            onClick={loadUsers}\n            className=\"reload-button\"\n            type=\"button\"\n            style={{ marginLeft: '1rem' }}\n          >\n            Reintentar\n          </button>\n        )}\n      </div>\n    )\n  }\n\n  if (loading) {\n    return <LoadingSpinner message=\"Cargando usuarios...\" />\n  }\n\n  return (\n    <div className=\"listado-container\">\n      <header className=\"listado-header\">\n        <h2 className=\"listado-title\">Lista de Usuarios</h2>\n        <button\n          onClick={loadUsers}\n          disabled={loading}\n          className=\"reload-button\"\n          type=\"button\"\n          aria-label=\"Recargar lista de usuarios\"\n        >\n          <span aria-hidden=\"true\">🔄</span>\n          Recargar\n        </button>\n      </header>\n\n      {error && renderError()}\n\n      {!error && (\n        <>\n          {renderFilters()}\n\n          {hasActiveFilters && (\n            <div className=\"results-counter\">\n              Mostrando {filteredData.length} de {users.length} usuarios\n            </div>\n          )}\n\n          {filteredData.length === 0 ? renderEmptyState() : renderTable()}\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Listado"],"names":["useFilter","data","filterConfig","filters","setFilters","useState","filteredData","useMemo","item","field","filterValue","itemValue","itemString","filterString","setFilter","value","prev","clearFilter","newFilters","clearAllFilters","hasActiveFilters","key","usePagination","itemsPerPage","currentPage","setCurrentPage","totalItems","totalPages","paginatedData","startIndex","endIndex","goToPage","page","targetPage","goToNextPage","goToPrevPage","goToFirstPage","goToLastPage","reset","Pagination","memo","onPageChange","hasNextPage","hasPrevPage","onNextPage","onPrevPage","onFirstPage","onLastPage","startItem","endItem","renderPageNumbers","pages","startPage","endPage","jsx","i","jsxs","FILTER_CONFIG","ITEMS_PER_PAGE","TableCell","children","className","title","FilterInput","label","onChange","placeholder","e","Listado","users","setUsers","loading","setLoading","error","setError","resetPagination","loadUsers","useCallback","logger","response","apiService","_a","err","useEffect","handleFilterChange","handleClearFilters","renderFilters","renderTable","user","renderEmptyState","renderError","isCorsError","LoadingSpinner","Fragment"],"mappings":"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"}